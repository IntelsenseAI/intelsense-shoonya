# Generated by Django 3.2.14 on 2023-12-14 07:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import shoonya_backend.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workspace_name', models.CharField(max_length=256, verbose_name='workspace_name')),
                ('is_archived', models.BooleanField(default=False, verbose_name='is_archived')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('public_analytics', models.BooleanField(default=True, help_text='States whether a workspace needs to be added for analytics or not.', verbose_name='public_analytics')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workspace_created_by', to=settings.AUTH_USER_MODEL, verbose_name='created_by')),
                ('frozen_users', models.ManyToManyField(blank=True, help_text='Frozen Workspace Users', related_name='frozen_workspace_users', to=settings.AUTH_USER_MODEL)),
                ('managers', models.ManyToManyField(related_name='workspace_managers', to=settings.AUTH_USER_MODEL, verbose_name='managers')),
                ('members', models.ManyToManyField(related_name='organization_users', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_workspace', to='organizations.organization')),
            ],
            options={
                'ordering': ['pk'],
            },
            bases=(models.Model, shoonya_backend.mixins.DummyModelMixin),
        ),
    ]
